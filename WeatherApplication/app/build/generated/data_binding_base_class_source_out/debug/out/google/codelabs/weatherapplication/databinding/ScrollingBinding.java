// Generated by view binder compiler. Do not edit!
package google.codelabs.weatherapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import google.codelabs.weatherapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ScrollingBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final RecyclerView dayForecast;

  @NonNull
  public final SunsetSunriseBinding sunsetSunrise;

  @NonNull
  public final UvWindHumidityBinding uvWindHumidity;

  @NonNull
  public final LinearLayout weekForecast;

  private ScrollingBinding(@NonNull NestedScrollView rootView, @NonNull RecyclerView dayForecast,
      @NonNull SunsetSunriseBinding sunsetSunrise, @NonNull UvWindHumidityBinding uvWindHumidity,
      @NonNull LinearLayout weekForecast) {
    this.rootView = rootView;
    this.dayForecast = dayForecast;
    this.sunsetSunrise = sunsetSunrise;
    this.uvWindHumidity = uvWindHumidity;
    this.weekForecast = weekForecast;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ScrollingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ScrollingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.scrolling, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ScrollingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.day_forecast;
      RecyclerView dayForecast = rootView.findViewById(id);
      if (dayForecast == null) {
        break missingId;
      }

      id = R.id.sunset_sunrise;
      View sunsetSunrise = rootView.findViewById(id);
      if (sunsetSunrise == null) {
        break missingId;
      }
      SunsetSunriseBinding binding_sunsetSunrise = SunsetSunriseBinding.bind(sunsetSunrise);

      id = R.id.uv_wind_humidity;
      View uvWindHumidity = rootView.findViewById(id);
      if (uvWindHumidity == null) {
        break missingId;
      }
      UvWindHumidityBinding binding_uvWindHumidity = UvWindHumidityBinding.bind(uvWindHumidity);

      id = R.id.week_forecast;
      LinearLayout weekForecast = rootView.findViewById(id);
      if (weekForecast == null) {
        break missingId;
      }

      return new ScrollingBinding((NestedScrollView) rootView, dayForecast, binding_sunsetSunrise,
          binding_uvWindHumidity, weekForecast);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
