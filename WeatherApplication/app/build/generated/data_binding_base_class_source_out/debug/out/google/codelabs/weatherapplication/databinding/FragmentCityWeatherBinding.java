// Generated by view binder compiler. Do not edit!
package google.codelabs.weatherapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextClock;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import google.codelabs.weatherapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCityWeatherBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final TextView cityName;

  @NonNull
  public final CoordinatorLayout coordinator;

  @NonNull
  public final TextView currentDay;

  @NonNull
  public final TextView currentTemperature;

  @NonNull
  public final TextClock currentTime;

  @NonNull
  public final ImageView currentWeatherIcon;

  @NonNull
  public final TextView feelsLike;

  @NonNull
  public final ScrollingBinding nestedScroll;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final LinearLayout tempMinMax;

  @NonNull
  public final TextView tempMinMaxT;

  @NonNull
  public final TextView toolCity;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final CollapsingToolbarLayout toolbarLayout;

  private FragmentCityWeatherBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBar, @NonNull TextView cityName,
      @NonNull CoordinatorLayout coordinator, @NonNull TextView currentDay,
      @NonNull TextView currentTemperature, @NonNull TextClock currentTime,
      @NonNull ImageView currentWeatherIcon, @NonNull TextView feelsLike,
      @NonNull ScrollingBinding nestedScroll, @NonNull ProgressBar progressBar,
      @NonNull LinearLayout tempMinMax, @NonNull TextView tempMinMaxT, @NonNull TextView toolCity,
      @NonNull Toolbar toolbar, @NonNull CollapsingToolbarLayout toolbarLayout) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.cityName = cityName;
    this.coordinator = coordinator;
    this.currentDay = currentDay;
    this.currentTemperature = currentTemperature;
    this.currentTime = currentTime;
    this.currentWeatherIcon = currentWeatherIcon;
    this.feelsLike = feelsLike;
    this.nestedScroll = nestedScroll;
    this.progressBar = progressBar;
    this.tempMinMax = tempMinMax;
    this.tempMinMaxT = tempMinMaxT;
    this.toolCity = toolCity;
    this.toolbar = toolbar;
    this.toolbarLayout = toolbarLayout;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCityWeatherBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCityWeatherBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_city_weather, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCityWeatherBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar;
      AppBarLayout appBar = rootView.findViewById(id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.city_name;
      TextView cityName = rootView.findViewById(id);
      if (cityName == null) {
        break missingId;
      }

      CoordinatorLayout coordinator = (CoordinatorLayout) rootView;

      id = R.id.current_day;
      TextView currentDay = rootView.findViewById(id);
      if (currentDay == null) {
        break missingId;
      }

      id = R.id.current_temperature;
      TextView currentTemperature = rootView.findViewById(id);
      if (currentTemperature == null) {
        break missingId;
      }

      id = R.id.current_time;
      TextClock currentTime = rootView.findViewById(id);
      if (currentTime == null) {
        break missingId;
      }

      id = R.id.current_weather_icon;
      ImageView currentWeatherIcon = rootView.findViewById(id);
      if (currentWeatherIcon == null) {
        break missingId;
      }

      id = R.id.feels_like;
      TextView feelsLike = rootView.findViewById(id);
      if (feelsLike == null) {
        break missingId;
      }

      id = R.id.nested_scroll;
      View nestedScroll = rootView.findViewById(id);
      if (nestedScroll == null) {
        break missingId;
      }
      ScrollingBinding binding_nestedScroll = ScrollingBinding.bind(nestedScroll);

      id = R.id.progressBar;
      ProgressBar progressBar = rootView.findViewById(id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.temp_min_max;
      LinearLayout tempMinMax = rootView.findViewById(id);
      if (tempMinMax == null) {
        break missingId;
      }

      id = R.id.temp_min_max_t;
      TextView tempMinMaxT = rootView.findViewById(id);
      if (tempMinMaxT == null) {
        break missingId;
      }

      id = R.id.tool_city;
      TextView toolCity = rootView.findViewById(id);
      if (toolCity == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbar_layout;
      CollapsingToolbarLayout toolbarLayout = rootView.findViewById(id);
      if (toolbarLayout == null) {
        break missingId;
      }

      return new FragmentCityWeatherBinding((CoordinatorLayout) rootView, appBar, cityName,
          coordinator, currentDay, currentTemperature, currentTime, currentWeatherIcon, feelsLike,
          binding_nestedScroll, progressBar, tempMinMax, tempMinMaxT, toolCity, toolbar,
          toolbarLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
