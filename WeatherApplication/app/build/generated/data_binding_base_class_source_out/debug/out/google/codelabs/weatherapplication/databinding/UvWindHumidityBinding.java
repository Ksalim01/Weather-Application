// Generated by view binder compiler. Do not edit!
package google.codelabs.weatherapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import google.codelabs.weatherapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UvWindHumidityBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView humidityText;

  @NonNull
  public final TextView humidityValue;

  @NonNull
  public final TextView uvIndex;

  @NonNull
  public final TextView uvText;

  @NonNull
  public final TextView windRate;

  @NonNull
  public final TextView windText;

  private UvWindHumidityBinding(@NonNull LinearLayout rootView, @NonNull TextView humidityText,
      @NonNull TextView humidityValue, @NonNull TextView uvIndex, @NonNull TextView uvText,
      @NonNull TextView windRate, @NonNull TextView windText) {
    this.rootView = rootView;
    this.humidityText = humidityText;
    this.humidityValue = humidityValue;
    this.uvIndex = uvIndex;
    this.uvText = uvText;
    this.windRate = windRate;
    this.windText = windText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UvWindHumidityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UvWindHumidityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.uv_wind_humidity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UvWindHumidityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.humidity_text;
      TextView humidityText = rootView.findViewById(id);
      if (humidityText == null) {
        break missingId;
      }

      id = R.id.humidity_value;
      TextView humidityValue = rootView.findViewById(id);
      if (humidityValue == null) {
        break missingId;
      }

      id = R.id.uv_index;
      TextView uvIndex = rootView.findViewById(id);
      if (uvIndex == null) {
        break missingId;
      }

      id = R.id.uv_text;
      TextView uvText = rootView.findViewById(id);
      if (uvText == null) {
        break missingId;
      }

      id = R.id.wind_rate;
      TextView windRate = rootView.findViewById(id);
      if (windRate == null) {
        break missingId;
      }

      id = R.id.wind_text;
      TextView windText = rootView.findViewById(id);
      if (windText == null) {
        break missingId;
      }

      return new UvWindHumidityBinding((LinearLayout) rootView, humidityText, humidityValue,
          uvIndex, uvText, windRate, windText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
