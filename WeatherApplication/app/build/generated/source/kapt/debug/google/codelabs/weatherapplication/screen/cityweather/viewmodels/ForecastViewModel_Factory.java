// Generated by Dagger (https://dagger.dev).
package google.codelabs.weatherapplication.screen.cityweather.viewmodels;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import google.codelabs.weatherapplication.repository.forecast.CityForecastDataProvider;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ForecastViewModel_Factory implements Factory<ForecastViewModel> {
  private final Provider<CityForecastDataProvider> forecastRepositoryProvider;

  public ForecastViewModel_Factory(Provider<CityForecastDataProvider> forecastRepositoryProvider) {
    this.forecastRepositoryProvider = forecastRepositoryProvider;
  }

  @Override
  public ForecastViewModel get() {
    return newInstance(forecastRepositoryProvider.get());
  }

  public static ForecastViewModel_Factory create(
      Provider<CityForecastDataProvider> forecastRepositoryProvider) {
    return new ForecastViewModel_Factory(forecastRepositoryProvider);
  }

  public static ForecastViewModel newInstance(CityForecastDataProvider forecastRepository) {
    return new ForecastViewModel(forecastRepository);
  }
}
