// Generated by Dagger (https://dagger.dev).
package google.codelabs.weatherapplication.screen.weathercitylist.viewmodels;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import google.codelabs.weatherapplication.repository.forecast.CityListDataProvider;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CityListViewModel_Factory implements Factory<CityListViewModel> {
  private final Provider<CityListDataProvider> repositoryProvider;

  public CityListViewModel_Factory(Provider<CityListDataProvider> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public CityListViewModel get() {
    return newInstance(repositoryProvider.get());
  }

  public static CityListViewModel_Factory create(
      Provider<CityListDataProvider> repositoryProvider) {
    return new CityListViewModel_Factory(repositoryProvider);
  }

  public static CityListViewModel newInstance(CityListDataProvider repository) {
    return new CityListViewModel(repository);
  }
}
