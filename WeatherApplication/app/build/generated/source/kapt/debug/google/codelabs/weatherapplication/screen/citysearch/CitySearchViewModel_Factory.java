// Generated by Dagger (https://dagger.dev).
package google.codelabs.weatherapplication.screen.citysearch;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import google.codelabs.weatherapplication.repository.forecast.CityExistence;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CitySearchViewModel_Factory implements Factory<CitySearchViewModel> {
  private final Provider<CityExistence> repositoryProvider;

  public CitySearchViewModel_Factory(Provider<CityExistence> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public CitySearchViewModel get() {
    return newInstance(repositoryProvider.get());
  }

  public static CitySearchViewModel_Factory create(Provider<CityExistence> repositoryProvider) {
    return new CitySearchViewModel_Factory(repositoryProvider);
  }

  public static CitySearchViewModel newInstance(CityExistence repository) {
    return new CitySearchViewModel(repository);
  }
}
